/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.foodapplication;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import java.awt.print.*;
import javax.swing.ImageIcon;
/**
 *
 * @author aldin
 */
public class split extends javax.swing.JFrame {
    JSONObject allOrders = new JSONObject();
    String currentTable;
    /**
     * Creates new form split
     */
    public split() {
        initComponents();
//        printerspace.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        left = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        qrcode = new javax.swing.JTextField();
        tablepanel = new javax.swing.JPanel();
        right = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        completeorder = new javax.swing.JButton();
        orderspanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        printerspace = new javax.swing.JScrollPane();
        printerarea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        left.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Pizza Swift");

        qrcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qrcodeActionPerformed(evt);
            }
        });

        tablepanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout leftLayout = new javax.swing.GroupLayout(left);
        left.setLayout(leftLayout);
        leftLayout.setHorizontalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tablepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(leftLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 613, Short.MAX_VALUE)
                        .addComponent(qrcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        leftLayout.setVerticalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(qrcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(tablepanel, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        right.setBackground(new java.awt.Color(255, 208, 153));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel2.setText("Table orders :");

        completeorder.setBackground(new java.awt.Color(0, 102, 102));
        completeorder.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        completeorder.setForeground(new java.awt.Color(255, 255, 255));
        completeorder.setText("Complete");
        completeorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeorderActionPerformed(evt);
            }
        });

        orderspanel.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        printerspace.setBackground(new java.awt.Color(204, 204, 204));
        printerspace.setBorder(null);
        printerspace.setEnabled(false);
        printerspace.setFocusable(false);
        printerspace.setRequestFocusEnabled(false);
        printerspace.setVerifyInputWhenFocusTarget(false);

        printerarea.setEditable(false);
        printerarea.setBackground(new java.awt.Color(246, 246, 246));
        printerarea.setColumns(20);
        printerarea.setFont(new java.awt.Font("Consolas", 1, 5)); // NOI18N
        printerarea.setRows(5);
        printerspace.setViewportView(printerarea);

        javax.swing.GroupLayout orderspanelLayout = new javax.swing.GroupLayout(orderspanel);
        orderspanel.setLayout(orderspanelLayout);
        orderspanelLayout.setHorizontalGroup(
            orderspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderspanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(printerspace, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderspanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
        );
        orderspanelLayout.setVerticalGroup(
            orderspanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderspanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printerspace)
                .addContainerGap())
        );

        javax.swing.GroupLayout rightLayout = new javax.swing.GroupLayout(right);
        right.setLayout(rightLayout);
        rightLayout.setHorizontalGroup(
            rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(completeorder, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, rightLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 170, Short.MAX_VALUE))
                    .addComponent(orderspanel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, Short.MAX_VALUE))
                .addContainerGap())
        );
        rightLayout.setVerticalGroup(
            rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderspanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(completeorder, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void qrcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qrcodeActionPerformed
        // TODO add your handling code here:
        
        String qrInput = qrcode.getText();
        
        // Check if the qr input ends with ;
        if(qrInput.charAt(qrInput.length() - 1) == ';'){ 
             try {
                    JSONObject inputObject = new JSONObject(qrInput.substring(0,qrInput.length()-1));
                 
                    // get object key                 
                 
                    String key = (String) inputObject.keys().next();

                   if(!allOrders.has(key)){
                   
//                    JButton dynamicButton = new JButton(key);
                    
                    // Replace "yourImage.png" with the path to your image file
//                    ImageIcon icon = new ImageIcon(getClass().getResource("table.png"));

                    // Create a button with HTML text to display image and title
                    JButton dynamicButton = new JButton("<html><center><img src='"
                     + "' width='100' height='100'><br>"+key+"</center></html>");
                    dynamicButton.setName("button-"+key);

                    // Add an ActionListener to the dynamic button
                    dynamicButton.addActionListener((ActionEvent e) -> {
                        // Handle button click event if needed
                        System.out.println("Button with key " + key + " clicked!");
                        
                        JPanel tilePanel = new JPanel(new FlowLayout(FlowLayout.TRAILING, 10, 0)); // Using FlowLayout for title and quantity
                        tilePanel.setBackground(Color.lightGray);

                        try {
                            
                                    
                            
                           
                            String  tableData =  (String) allOrders.get(key);
                            JSONArray table2Array = new JSONArray(tableData);
                            
                           
                             // Get the existing table model
                            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();

                            // Clear existing rows
                            tableModel.setRowCount(0);
                            // Iterate over the JSON array
                            for (int i = 0; i < table2Array.length(); i++) {
                                // Get the JSON object at index i
                                JSONObject item = table2Array.getJSONObject(i);

                                // Access individual values using keys
//                                String total = item.getString("total");
                                String name = item.getString("name");
                                var quantity =  item.getInt("quantity");
                                
//                                int id = item.getInt("id");

                                // Print or use the values as needed
                                JLabel titleLabel = new JLabel(name);
                                JLabel quantityLabel = new JLabel(Integer.toString(quantity));


                                  // Add a row to the table model
                                tableModel.addRow(new Object[]{name, quantity});
                            }
                            // Refresh the UI to reflect the changes
                            orderspanel.revalidate();
                            orderspanel.repaint();
                            this.currentTable = key;
                        } catch (JSONException ex) {
                            Logger.getLogger(split.class.getName()).log(Level.SEVERE, null, ex);
                        }
                       
                    });
                    
                    dynamicButton.setSize(400, 300);
                    dynamicButton.setBackground(Color.white);
                    allOrders.put(key, inputObject.get(key));
                    
                    System.out.println(allOrders);

                    // Add the dynamic button to your JPanel (replace 'panel' with your actual JPanel)
                    tablepanel.add(dynamicButton);

                    // Refresh the UI to reflect the changes
                    tablepanel.revalidate();
                    tablepanel.repaint();
                   }
                    
                    // Create a button with the key as the label
                  
                 
                 // make the input empty                 
                 qrcode.setText("");
             } catch (JSONException ex) {
                 Logger.getLogger(split.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
    }//GEN-LAST:event_qrcodeActionPerformed

    private void completeorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeorderActionPerformed
        if(currentTable != ""){
            // TODO add your handling code here:
        printerarea.setText("************************************\n");
        printerarea.setText(printerarea.getText()+"*             Pizza Swift          *\n");
        printerarea.setText(printerarea.getText()+"************************************\n");
        
        Date date = new Date();
        String today = date.toString();
        
        printerarea.setText(printerarea.getText()+"\n"+today+"\n\n");
        
        printerarea.setText(printerarea.getText()+"Table : "+currentTable+"\n\n");
        
        try {
             String  tableData =  (String) allOrders.get(currentTable);
                JSONArray table2Array = new JSONArray(tableData);
            float totalPrice = 0;
            for (int i = 0; i < table2Array.length(); i++) {
                                // Get the JSON object at index i
                                JSONObject item = table2Array.getJSONObject(i);

                                // Access individual values using keys
                                float total = Float.parseFloat(item.getString("price"));
                                var quantity =  item.getInt("quantity");
                                String name = item.getString("name");
                                
                                totalPrice = totalPrice + total;
                                printerarea.setText(printerarea.getText()+name+"             : "+total+(quantity)+"\n\n");
            }
            
            printerarea.setText(printerarea.getText()+"*             Total is : " +totalPrice+" *"+"\n");
            
            try {
                printerarea.print();
            } catch (PrinterException ex) {
                Logger.getLogger(split.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (JSONException ex) {
            Logger.getLogger(split.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // remove the printed table from the screen        
        Component[] components = tablepanel.getComponents();
        String btn = "button-"+currentTable;
        for (Component component : components) {
            if (component instanceof JButton && btn.equals(component.getName())) {
                tablepanel.remove(component);
                break;
            }
        }
        tablepanel.revalidate();
        tablepanel.repaint();
        
        printerarea.setText("");
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        
        tableModel.setRowCount(0);
        }
    }//GEN-LAST:event_completeorderActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(split.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(split.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(split.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(split.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new split().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton completeorder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel left;
    private javax.swing.JPanel orderspanel;
    private javax.swing.JTextArea printerarea;
    private javax.swing.JScrollPane printerspace;
    private javax.swing.JTextField qrcode;
    private javax.swing.JPanel right;
    private javax.swing.JPanel tablepanel;
    // End of variables declaration//GEN-END:variables
}
